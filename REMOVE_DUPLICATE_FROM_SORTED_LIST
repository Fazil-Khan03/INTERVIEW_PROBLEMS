/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        
        
        if(head==NULL)
              return NULL;
        
        if(head->next==NULL)
              return head;
        
        
        
        while(head && head->next && head->val==head->next->val)
              head->next= head->next->next;
        
        
        
        ListNode* ptr = head->next;
        ListNode* preptr = head;
        
        
        while(ptr!=NULL)
        {
           
           if(ptr->val==preptr->val)
           {   
                preptr->next = ptr->next;
                ptr=ptr->next;
                
            }
          else
          {
                preptr = ptr;
                ptr=ptr->next;
          } 
            
    }
        
    
     return head;   
    }
};
