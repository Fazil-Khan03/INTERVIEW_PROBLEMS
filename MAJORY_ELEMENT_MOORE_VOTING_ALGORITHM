/*
Given an array A of N elements. Find the majority element in the array. A majority element in an array A of size N is an element that appears more than N/2 times in the array.

Input:  
The first line of the input contains T denoting the number of testcases. The first line of the test case will be the size of array and second line will be the elements of the array.

Output: 
For each test case the output will be the majority element of the array. Output "-1" if no majority element is there in the array.

Constraints:
1 <= T<= 100
1 <= N <= 107
0 <= Ai <= 106

Example:
Input:
2
5
3 1 3 3 2
3
1 2 3

Output:
3
-1

Explanation:
Testcase 1: Since, 3 is present more than N/2 times, so it is the majority element.
 
 */
 
 
 #include<bits/stdc++.h>
using namespace std;
int main()
{
	int T;
	cin>>T;
	
   int arr[100000];
	
	while(T--)
	{
	  
	
	  int n;
	  cin>>n;
	 
	  for(int i=0;i<n;i++)
	    cin>>arr[i];
	    
	    int cnt = 0;
	    int ele = 0;
   
	    for(int i=0;i<n;i++)
	    {
	         if(cnt==0)
	            ele = arr[i];
	       
	         if(arr[i]==ele)
	          cnt++;
	          else
	           cnt--;
	        
	     }


int count = 0;
bool flag = false;
  for(int i=0;i<n;i++)
   {
   	
   	if(arr[i]==ele)
   	    count++;
   	 
		if(count>(n/2)) 
		  {
		     
		       flag = true;
		        break;
		       
		  
		  }   
   	
   	
   }
   if(flag)
     cout<<ele;
     else
       cout<<-1;
   
	 cout<<endl;
	   
	    
	}	return 0;
}


