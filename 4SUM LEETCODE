
/*

Given an array nums of n integers and an integer target, are there elements a, b, c, and d in nums such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.

Note:

The solution set must not contain duplicate quadruplets.

Example:

Given array nums = [1, 0, -1, 0, -2, 2], and target = 0.

A solution set is:
[
  [-1,  0, 0, 1],
  [-2, -1, 1, 2],
  [-2,  0, 0, 2]
]


*/


class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        
        vector<int>  temp;
           vector<vector<int>> result;
        
        if(nums.size()<4)
             return result;
        
        sort(nums.begin(),nums.end());
       
        set<vector<int>> st;
       
       
        for(int i=0;i<nums.size()-2;i++)
        {
        	
            
            for(int j=i+1;j<nums.size()-1;j++)
            {
                
                int start = j+1 ;
                int end = nums.size()-1;
           
            while(start<end)
            {
                
                if(nums[start]+nums[end]==(target-nums[i]-nums[j]))
                {
                    
                    temp.push_back(nums[i]);
                    temp.push_back(nums[j]);
                    temp.push_back(nums[start]);
                    temp.push_back(nums[end]);
                    
                    sort(temp.begin(),temp.end());
                    
                   if(st.find(temp)==st.end())
				   {
					 
                     result.push_back(temp);
                     st.insert(temp);
                    
                     
                    }
					
               temp.clear();
               start++;
               end--;
                    
                
                }
                else if((nums[start] + nums[end])<(target-nums[i]-nums[j]))
                {
				
                      start++;
                }
			   else
			   {
			   
                   end--;
                
               }
			   
			    
        }
           
            
    }
       
        }
     
        
     return result;    
        
    }
};
