/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        
        
        ListNode *dummy = new ListNode(9999);
        ListNode *tail = dummy;
    
        ListNode *ptr1 = l1;
        ListNode *ptr2 = l2;
      
        while(ptr1!=NULL && ptr2!=NULL)
        {
            if(ptr1->val<=ptr2->val)
            {
                
                tail->next = new ListNode(ptr1->val);
                tail = tail->next;
                ptr1 = ptr1->next;
          
            }
            else
            {
             
                tail->next = new ListNode(ptr2->val);
                tail = tail->next;
                
                ptr2 = ptr2->next;
              
            }
            
        }
        
        
    tail->next = (ptr1==NULL) ? ptr2 : ptr1;    
   return dummy->next;   
        
    }
};
