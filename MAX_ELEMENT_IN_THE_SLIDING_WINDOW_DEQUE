


vector<int> maxSlidingWindow(vector<int>& nums, int k) {
     
        if(nums.size()==1 || k==1)
              return nums;
        deque<int> dq;
        vector<int> result;
        int i;
        for(i=0;i<k;i++)
        {
            
            while(!dq.empty() && nums[dq.back()]<=nums[i])
            {
                dq.pop_back();
                
                
            }
            dq.push_back(i);
            
        }
        /// traverse the array
        
        for(;i<nums.size();i++)
        {
            
           result.push_back(nums[dq.front()]);
            
            while(!dq.empty() && dq.front()<=i-k)
                  dq.pop_front();
           
            
            while(!dq.empty() && nums[dq.back()]<=nums[i])
            {
                dq.pop_back();
              
            }
            
            dq.push_back(i);
            
        }
        
        result.push_back(nums[dq.front()]);
        return result;
        
    }
