/*
Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:

Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].

*/

    int getindex(vector<int> nums,int num)
    {
        
        int index;
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]==num)
            { index = i;
                break;
            }
            
        }
        
        return index;
        
    }
    
    
    vector<int> twoSum(vector<int>& nums, int target) {
        
        vector<int> result;
        
        set<int> st;
        
        for(int i=0;i<nums.size();i++)
        {
            if(st.find(target-nums[i])!=st.end())
            {
                
                int index = getindex(nums,target-nums[i]);
                
                  result.push_back(index);
                  result.push_back(i);
                
                
            }
            else
            {
                st.insert(nums[i]);
               
                
            }
            
        }
                 
        
     return result;   
    }
