/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    int find(TreeNode *node,int &h)
    {
    if(node==NULL)return 0;
    int lh=find(node->left,h);
    int rh=find(node->right,h);
    h=max(h,lh+rh);
    return max(lh,rh)+1;
    }

    int diameterOfBinaryTree(TreeNode* root) {
        
        if(root==NULL)
            return 0;
        
            int h=-1;
find(root,h);
return h;
    
        
        
    }
};
